const mongoose = require('mongoose');
const { checkProductionData } = require('./check-production-data');
const { migrateAllData } = require('./migrate-binhduong-data');

// K·∫øt n·ªëi MongoDB
const connectDB = async () => {
    try {
        await mongoose.connect('mongodb://localhost:27017/hydrology-dashboard');
        console.log('‚úÖ Connected to MongoDB');
    } catch (error) {
        console.error('‚ùå MongoDB connection error:', error);
        process.exit(1);
    }
};

// Main execution
const main = async () => {
    try {
        console.log('üöÄ BINH DUONG PRODUCTION MIGRATION');
        console.log('===================================\n');

        await connectDB();

        // B∆∞·ªõc 1: Ki·ªÉm tra d·ªØ li·ªáu production
        console.log('üìã STEP 1: Checking production data...\n');
        await checkProductionData();

        // B∆∞·ªõc 2: X√°c nh·∫≠n migration
        console.log('\n‚ö†Ô∏è  MIGRATION CONFIRMATION');
        console.log('==========================');
        console.log('This will migrate ALL Binh Duong data from old schema to new schema.');
        console.log('Existing V2 data will be DELETED and replaced.');
        console.log('\nPress Ctrl+C to cancel, or wait 10 seconds to continue...');

        await new Promise(resolve => setTimeout(resolve, 10000));

        // B∆∞·ªõc 3: Th·ª±c hi·ªán migration
        console.log('\nüîÑ STEP 2: Starting migration...\n');
        await migrateAllData();

        // B∆∞·ªõc 4: Ki·ªÉm tra k·∫øt qu·∫£
        console.log('\n‚úÖ STEP 3: Migration completed successfully!');
        console.log('\nüéØ NEXT STEPS:');
        console.log('1. Verify API endpoints are working correctly');
        console.log('2. Test frontend functionality');
        console.log('3. Monitor system performance');
        console.log('4. Consider cleaning up old schema data after verification');

    } catch (error) {
        console.error('‚ùå Migration failed:', error);
        console.log('\nüîß TROUBLESHOOTING:');
        console.log('1. Check MongoDB connection');
        console.log('2. Verify database permissions');
        console.log('3. Check available disk space');
        console.log('4. Review error logs for specific issues');
    } finally {
        await mongoose.disconnect();
        console.log('\nüîå Disconnected from MongoDB');
        process.exit(0);
    }
};

// Ch·∫°y migration
if (require.main === module) {
    main();
}

module.exports = { main };
